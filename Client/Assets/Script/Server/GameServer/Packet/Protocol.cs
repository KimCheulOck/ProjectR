// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protocol.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Protobuf.Protocol {

  /// <summary>Holder for reflection information generated from Protocol.proto</summary>
  public static partial class ProtocolReflection {

    #region Descriptor
    /// <summary>File descriptor for Protocol.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtocolReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5Qcm90b2NvbC5wcm90bxIIUHJvdG9jb2wiFgoHQ19Mb2dpbhILCgNwaWQY",
            "ASABKAkiMwoHU19Mb2dpbhIoCgpyZXN1bHRJbmZvGAEgASgLMhQuUHJvdG9j",
            "b2wuUmVzdWx0SW5mbyIXCghDX0xvZ291dBILCgNwaWQYASABKAkiJQoLQ19F",
            "bnRlckdhbWUSFgoOY2hhcmFjdGVySW5kZXgYASABKAUiOQoLQ19FbnRlclJv",
            "b20SEgoKZmllbGRJbmRleBgBIAEoBRIWCg5jaGFyYWN0ZXJJbmRleBgCIAEo",
            "BSJhCgtTX0VudGVyUm9vbRIoCgpyZXN1bHRJbmZvGAEgASgLMhQuUHJvdG9j",
            "b2wuUmVzdWx0SW5mbxIoCgpwbGF5ZXJJbmZvGAIgAygLMhQuUHJvdG9jb2wu",
            "UGxheWVySW5mbyI5Cg1TX0VudGVyUGxheWVyEigKCnBsYXllckluZm8YASAB",
            "KAsyFC5Qcm90b2NvbC5QbGF5ZXJJbmZvIjkKDVNfTGVhdmVQbGF5ZXISKAoK",
            "cGxheWVySW5mbxgBIAEoCzIULlByb3RvY29sLlBsYXllckluZm8iNgoGQ19N",
            "b3ZlEiwKDHBvc2l0aW9uSW5mbxgBIAEoCzIWLlByb3RvY29sLlBvc2l0aW9u",
            "SW5mbyJDCgZTX01vdmUSCwoDcGlkGAEgASgJEiwKDHBvc2l0aW9uSW5mbxgC",
            "IAEoCzIWLlByb3RvY29sLlBvc2l0aW9uSW5mbyIsCgpSZXN1bHRJbmZvEhEK",
            "CWVycm9yQ29kZRgBIAEoBRILCgNtc2cYAiABKAkiQQoKUGxheWVySW5mbxIL",
            "CgNwaWQYASABKAkSJgoJY2hhcmFjdGVyGAIgASgLMhMuUHJvdG9jb2wuQ2hh",
            "cmFjdGVyIowBCglDaGFyYWN0ZXISDQoFaW5kZXgYASABKAUSEgoKZmllbGRJ",
            "bmRleBgCIAEoBRIsCgxwb3NpdGlvbkluZm8YAyABKAsyFi5Qcm90b2NvbC5Q",
            "b3NpdGlvbkluZm8SDAoEbmFtZRgEIAEoCRIgCgZzdGF0dXMYBSABKAsyEC5Q",
            "cm90b2NvbC5TdGF0dXMiKgoMUG9zaXRpb25JbmZvEgwKBHBvc1gYASABKAIS",
            "DAoEcG9zWRgCIAEoAiLaAQoGU3RhdHVzEg0KBWxldmVsGAEgASgFEgsKA2V4",
            "cBgCIAEoBRIKCgJocBgDIAEoBRIKCgJtcBgEIAEoBRIOCgZhdHRhY2sYBSAB",
            "KAUSDwoHZGVmZW5zZRgGIAEoBRILCgNoaXQYByABKAUSDQoFYXZvaWQYCCAB",
            "KAUSEAoIY3JpdGljYWwYCSABKAUSEwoLYXR0YWNrU3BlZWQYCiABKAUSEQoJ",
            "bW92ZVNwZWVkGAsgASgFEhIKCnNwZWxsU3BlZWQYDCABKAUSEQoJZWxlbWVu",
            "dGFsGA0gASgFKqUBCgVNc2dJZBILCgdDX0xPR0lOEAASCwoHU19MT0dJThAB",
            "EgwKCENfTE9HT1VUEAISEAoMQ19FTlRFUl9HQU1FEAMSEAoMQ19FTlRFUl9S",
            "T09NEAQSEAoMU19FTlRFUl9ST09NEAUSEgoOU19FTlRFUl9QTEFZRVIQBhIS",
            "Cg5TX0xFQVZFX1BMQVlFUhAHEgoKBkNfTU9WRRAIEgoKBlNfTU9WRRAJQhuq",
            "AhhHb29nbGUuUHJvdG9idWYuUHJvdG9jb2xiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Protobuf.Protocol.MsgId), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_Login), global::Google.Protobuf.Protocol.C_Login.Parser, new[]{ "Pid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_Login), global::Google.Protobuf.Protocol.S_Login.Parser, new[]{ "ResultInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_Logout), global::Google.Protobuf.Protocol.C_Logout.Parser, new[]{ "Pid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_EnterGame), global::Google.Protobuf.Protocol.C_EnterGame.Parser, new[]{ "CharacterIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_EnterRoom), global::Google.Protobuf.Protocol.C_EnterRoom.Parser, new[]{ "FieldIndex", "CharacterIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_EnterRoom), global::Google.Protobuf.Protocol.S_EnterRoom.Parser, new[]{ "ResultInfo", "PlayerInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_EnterPlayer), global::Google.Protobuf.Protocol.S_EnterPlayer.Parser, new[]{ "PlayerInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_LeavePlayer), global::Google.Protobuf.Protocol.S_LeavePlayer.Parser, new[]{ "PlayerInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.C_Move), global::Google.Protobuf.Protocol.C_Move.Parser, new[]{ "PositionInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.S_Move), global::Google.Protobuf.Protocol.S_Move.Parser, new[]{ "Pid", "PositionInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.ResultInfo), global::Google.Protobuf.Protocol.ResultInfo.Parser, new[]{ "ErrorCode", "Msg" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.PlayerInfo), global::Google.Protobuf.Protocol.PlayerInfo.Parser, new[]{ "Pid", "Character" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.Character), global::Google.Protobuf.Protocol.Character.Parser, new[]{ "Index", "FieldIndex", "PositionInfo", "Name", "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.PositionInfo), global::Google.Protobuf.Protocol.PositionInfo.Parser, new[]{ "PosX", "PosY" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.Protocol.Status), global::Google.Protobuf.Protocol.Status.Parser, new[]{ "Level", "Exp", "Hp", "Mp", "Attack", "Defense", "Hit", "Avoid", "Critical", "AttackSpeed", "MoveSpeed", "SpellSpeed", "Elemental" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MsgId {
    [pbr::OriginalName("C_LOGIN")] CLogin = 0,
    [pbr::OriginalName("S_LOGIN")] SLogin = 1,
    [pbr::OriginalName("C_LOGOUT")] CLogout = 2,
    [pbr::OriginalName("C_ENTER_GAME")] CEnterGame = 3,
    [pbr::OriginalName("C_ENTER_ROOM")] CEnterRoom = 4,
    [pbr::OriginalName("S_ENTER_ROOM")] SEnterRoom = 5,
    [pbr::OriginalName("S_ENTER_PLAYER")] SEnterPlayer = 6,
    [pbr::OriginalName("S_LEAVE_PLAYER")] SLeavePlayer = 7,
    [pbr::OriginalName("C_MOVE")] CMove = 8,
    [pbr::OriginalName("S_MOVE")] SMove = 9,
  }

  #endregion

  #region Messages
  public sealed partial class C_Login : pb::IMessage<C_Login> {
    private static readonly pb::MessageParser<C_Login> _parser = new pb::MessageParser<C_Login>(() => new C_Login());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_Login> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_Login() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_Login(C_Login other) : this() {
      pid_ = other.pid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_Login Clone() {
      return new C_Login(this);
    }

    /// <summary>Field number for the "pid" field.</summary>
    public const int PidFieldNumber = 1;
    private string pid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pid {
      get { return pid_; }
      set {
        pid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_Login);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_Login other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pid != other.Pid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pid.Length != 0) hash ^= Pid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_Login other) {
      if (other == null) {
        return;
      }
      if (other.Pid.Length != 0) {
        Pid = other.Pid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_Login : pb::IMessage<S_Login> {
    private static readonly pb::MessageParser<S_Login> _parser = new pb::MessageParser<S_Login>(() => new S_Login());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_Login> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Login() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Login(S_Login other) : this() {
      resultInfo_ = other.resultInfo_ != null ? other.resultInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Login Clone() {
      return new S_Login(this);
    }

    /// <summary>Field number for the "resultInfo" field.</summary>
    public const int ResultInfoFieldNumber = 1;
    private global::Google.Protobuf.Protocol.ResultInfo resultInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.ResultInfo ResultInfo {
      get { return resultInfo_; }
      set {
        resultInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_Login);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_Login other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResultInfo, other.ResultInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resultInfo_ != null) hash ^= ResultInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resultInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResultInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resultInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResultInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_Login other) {
      if (other == null) {
        return;
      }
      if (other.resultInfo_ != null) {
        if (resultInfo_ == null) {
          ResultInfo = new global::Google.Protobuf.Protocol.ResultInfo();
        }
        ResultInfo.MergeFrom(other.ResultInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (resultInfo_ == null) {
              ResultInfo = new global::Google.Protobuf.Protocol.ResultInfo();
            }
            input.ReadMessage(ResultInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_Logout : pb::IMessage<C_Logout> {
    private static readonly pb::MessageParser<C_Logout> _parser = new pb::MessageParser<C_Logout>(() => new C_Logout());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_Logout> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_Logout() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_Logout(C_Logout other) : this() {
      pid_ = other.pid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_Logout Clone() {
      return new C_Logout(this);
    }

    /// <summary>Field number for the "pid" field.</summary>
    public const int PidFieldNumber = 1;
    private string pid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pid {
      get { return pid_; }
      set {
        pid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_Logout);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_Logout other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pid != other.Pid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pid.Length != 0) hash ^= Pid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_Logout other) {
      if (other == null) {
        return;
      }
      if (other.Pid.Length != 0) {
        Pid = other.Pid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_EnterGame : pb::IMessage<C_EnterGame> {
    private static readonly pb::MessageParser<C_EnterGame> _parser = new pb::MessageParser<C_EnterGame>(() => new C_EnterGame());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_EnterGame> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_EnterGame() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_EnterGame(C_EnterGame other) : this() {
      characterIndex_ = other.characterIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_EnterGame Clone() {
      return new C_EnterGame(this);
    }

    /// <summary>Field number for the "characterIndex" field.</summary>
    public const int CharacterIndexFieldNumber = 1;
    private int characterIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CharacterIndex {
      get { return characterIndex_; }
      set {
        characterIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_EnterGame);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_EnterGame other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CharacterIndex != other.CharacterIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CharacterIndex != 0) hash ^= CharacterIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CharacterIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CharacterIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CharacterIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CharacterIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_EnterGame other) {
      if (other == null) {
        return;
      }
      if (other.CharacterIndex != 0) {
        CharacterIndex = other.CharacterIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CharacterIndex = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_EnterRoom : pb::IMessage<C_EnterRoom> {
    private static readonly pb::MessageParser<C_EnterRoom> _parser = new pb::MessageParser<C_EnterRoom>(() => new C_EnterRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_EnterRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_EnterRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_EnterRoom(C_EnterRoom other) : this() {
      fieldIndex_ = other.fieldIndex_;
      characterIndex_ = other.characterIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_EnterRoom Clone() {
      return new C_EnterRoom(this);
    }

    /// <summary>Field number for the "fieldIndex" field.</summary>
    public const int FieldIndexFieldNumber = 1;
    private int fieldIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FieldIndex {
      get { return fieldIndex_; }
      set {
        fieldIndex_ = value;
      }
    }

    /// <summary>Field number for the "characterIndex" field.</summary>
    public const int CharacterIndexFieldNumber = 2;
    private int characterIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CharacterIndex {
      get { return characterIndex_; }
      set {
        characterIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_EnterRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_EnterRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FieldIndex != other.FieldIndex) return false;
      if (CharacterIndex != other.CharacterIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FieldIndex != 0) hash ^= FieldIndex.GetHashCode();
      if (CharacterIndex != 0) hash ^= CharacterIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FieldIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FieldIndex);
      }
      if (CharacterIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CharacterIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FieldIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FieldIndex);
      }
      if (CharacterIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CharacterIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_EnterRoom other) {
      if (other == null) {
        return;
      }
      if (other.FieldIndex != 0) {
        FieldIndex = other.FieldIndex;
      }
      if (other.CharacterIndex != 0) {
        CharacterIndex = other.CharacterIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FieldIndex = input.ReadInt32();
            break;
          }
          case 16: {
            CharacterIndex = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_EnterRoom : pb::IMessage<S_EnterRoom> {
    private static readonly pb::MessageParser<S_EnterRoom> _parser = new pb::MessageParser<S_EnterRoom>(() => new S_EnterRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_EnterRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_EnterRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_EnterRoom(S_EnterRoom other) : this() {
      resultInfo_ = other.resultInfo_ != null ? other.resultInfo_.Clone() : null;
      playerInfo_ = other.playerInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_EnterRoom Clone() {
      return new S_EnterRoom(this);
    }

    /// <summary>Field number for the "resultInfo" field.</summary>
    public const int ResultInfoFieldNumber = 1;
    private global::Google.Protobuf.Protocol.ResultInfo resultInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.ResultInfo ResultInfo {
      get { return resultInfo_; }
      set {
        resultInfo_ = value;
      }
    }

    /// <summary>Field number for the "playerInfo" field.</summary>
    public const int PlayerInfoFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Google.Protobuf.Protocol.PlayerInfo> _repeated_playerInfo_codec
        = pb::FieldCodec.ForMessage(18, global::Google.Protobuf.Protocol.PlayerInfo.Parser);
    private readonly pbc::RepeatedField<global::Google.Protobuf.Protocol.PlayerInfo> playerInfo_ = new pbc::RepeatedField<global::Google.Protobuf.Protocol.PlayerInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Google.Protobuf.Protocol.PlayerInfo> PlayerInfo {
      get { return playerInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_EnterRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_EnterRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResultInfo, other.ResultInfo)) return false;
      if(!playerInfo_.Equals(other.playerInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (resultInfo_ != null) hash ^= ResultInfo.GetHashCode();
      hash ^= playerInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (resultInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResultInfo);
      }
      playerInfo_.WriteTo(output, _repeated_playerInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (resultInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResultInfo);
      }
      size += playerInfo_.CalculateSize(_repeated_playerInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_EnterRoom other) {
      if (other == null) {
        return;
      }
      if (other.resultInfo_ != null) {
        if (resultInfo_ == null) {
          ResultInfo = new global::Google.Protobuf.Protocol.ResultInfo();
        }
        ResultInfo.MergeFrom(other.ResultInfo);
      }
      playerInfo_.Add(other.playerInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (resultInfo_ == null) {
              ResultInfo = new global::Google.Protobuf.Protocol.ResultInfo();
            }
            input.ReadMessage(ResultInfo);
            break;
          }
          case 18: {
            playerInfo_.AddEntriesFrom(input, _repeated_playerInfo_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_EnterPlayer : pb::IMessage<S_EnterPlayer> {
    private static readonly pb::MessageParser<S_EnterPlayer> _parser = new pb::MessageParser<S_EnterPlayer>(() => new S_EnterPlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_EnterPlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_EnterPlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_EnterPlayer(S_EnterPlayer other) : this() {
      playerInfo_ = other.playerInfo_ != null ? other.playerInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_EnterPlayer Clone() {
      return new S_EnterPlayer(this);
    }

    /// <summary>Field number for the "playerInfo" field.</summary>
    public const int PlayerInfoFieldNumber = 1;
    private global::Google.Protobuf.Protocol.PlayerInfo playerInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.PlayerInfo PlayerInfo {
      get { return playerInfo_; }
      set {
        playerInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_EnterPlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_EnterPlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerInfo, other.PlayerInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (playerInfo_ != null) hash ^= PlayerInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (playerInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (playerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_EnterPlayer other) {
      if (other == null) {
        return;
      }
      if (other.playerInfo_ != null) {
        if (playerInfo_ == null) {
          PlayerInfo = new global::Google.Protobuf.Protocol.PlayerInfo();
        }
        PlayerInfo.MergeFrom(other.PlayerInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playerInfo_ == null) {
              PlayerInfo = new global::Google.Protobuf.Protocol.PlayerInfo();
            }
            input.ReadMessage(PlayerInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_LeavePlayer : pb::IMessage<S_LeavePlayer> {
    private static readonly pb::MessageParser<S_LeavePlayer> _parser = new pb::MessageParser<S_LeavePlayer>(() => new S_LeavePlayer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_LeavePlayer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_LeavePlayer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_LeavePlayer(S_LeavePlayer other) : this() {
      playerInfo_ = other.playerInfo_ != null ? other.playerInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_LeavePlayer Clone() {
      return new S_LeavePlayer(this);
    }

    /// <summary>Field number for the "playerInfo" field.</summary>
    public const int PlayerInfoFieldNumber = 1;
    private global::Google.Protobuf.Protocol.PlayerInfo playerInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.PlayerInfo PlayerInfo {
      get { return playerInfo_; }
      set {
        playerInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_LeavePlayer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_LeavePlayer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerInfo, other.PlayerInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (playerInfo_ != null) hash ^= PlayerInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (playerInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (playerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_LeavePlayer other) {
      if (other == null) {
        return;
      }
      if (other.playerInfo_ != null) {
        if (playerInfo_ == null) {
          PlayerInfo = new global::Google.Protobuf.Protocol.PlayerInfo();
        }
        PlayerInfo.MergeFrom(other.PlayerInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playerInfo_ == null) {
              PlayerInfo = new global::Google.Protobuf.Protocol.PlayerInfo();
            }
            input.ReadMessage(PlayerInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class C_Move : pb::IMessage<C_Move> {
    private static readonly pb::MessageParser<C_Move> _parser = new pb::MessageParser<C_Move>(() => new C_Move());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<C_Move> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_Move() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_Move(C_Move other) : this() {
      positionInfo_ = other.positionInfo_ != null ? other.positionInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public C_Move Clone() {
      return new C_Move(this);
    }

    /// <summary>Field number for the "positionInfo" field.</summary>
    public const int PositionInfoFieldNumber = 1;
    private global::Google.Protobuf.Protocol.PositionInfo positionInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.PositionInfo PositionInfo {
      get { return positionInfo_; }
      set {
        positionInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as C_Move);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(C_Move other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PositionInfo, other.PositionInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (positionInfo_ != null) hash ^= PositionInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (positionInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PositionInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (positionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PositionInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(C_Move other) {
      if (other == null) {
        return;
      }
      if (other.positionInfo_ != null) {
        if (positionInfo_ == null) {
          PositionInfo = new global::Google.Protobuf.Protocol.PositionInfo();
        }
        PositionInfo.MergeFrom(other.PositionInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (positionInfo_ == null) {
              PositionInfo = new global::Google.Protobuf.Protocol.PositionInfo();
            }
            input.ReadMessage(PositionInfo);
            break;
          }
        }
      }
    }

  }

  public sealed partial class S_Move : pb::IMessage<S_Move> {
    private static readonly pb::MessageParser<S_Move> _parser = new pb::MessageParser<S_Move>(() => new S_Move());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<S_Move> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Move() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Move(S_Move other) : this() {
      pid_ = other.pid_;
      positionInfo_ = other.positionInfo_ != null ? other.positionInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public S_Move Clone() {
      return new S_Move(this);
    }

    /// <summary>Field number for the "pid" field.</summary>
    public const int PidFieldNumber = 1;
    private string pid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pid {
      get { return pid_; }
      set {
        pid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "positionInfo" field.</summary>
    public const int PositionInfoFieldNumber = 2;
    private global::Google.Protobuf.Protocol.PositionInfo positionInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.PositionInfo PositionInfo {
      get { return positionInfo_; }
      set {
        positionInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as S_Move);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(S_Move other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pid != other.Pid) return false;
      if (!object.Equals(PositionInfo, other.PositionInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pid.Length != 0) hash ^= Pid.GetHashCode();
      if (positionInfo_ != null) hash ^= PositionInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pid);
      }
      if (positionInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PositionInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pid);
      }
      if (positionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PositionInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(S_Move other) {
      if (other == null) {
        return;
      }
      if (other.Pid.Length != 0) {
        Pid = other.Pid;
      }
      if (other.positionInfo_ != null) {
        if (positionInfo_ == null) {
          PositionInfo = new global::Google.Protobuf.Protocol.PositionInfo();
        }
        PositionInfo.MergeFrom(other.PositionInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pid = input.ReadString();
            break;
          }
          case 18: {
            if (positionInfo_ == null) {
              PositionInfo = new global::Google.Protobuf.Protocol.PositionInfo();
            }
            input.ReadMessage(PositionInfo);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///========================================================//
  ///========================================================//
  /// Proto data class
  ///========================================================//
  ///========================================================//
  /// </summary>
  public sealed partial class ResultInfo : pb::IMessage<ResultInfo> {
    private static readonly pb::MessageParser<ResultInfo> _parser = new pb::MessageParser<ResultInfo>(() => new ResultInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResultInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultInfo(ResultInfo other) : this() {
      errorCode_ = other.errorCode_;
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResultInfo Clone() {
      return new ResultInfo(this);
    }

    /// <summary>Field number for the "errorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private int errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 2;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResultInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResultInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ErrorCode);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResultInfo other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerInfo : pb::IMessage<PlayerInfo> {
    private static readonly pb::MessageParser<PlayerInfo> _parser = new pb::MessageParser<PlayerInfo>(() => new PlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo(PlayerInfo other) : this() {
      pid_ = other.pid_;
      character_ = other.character_ != null ? other.character_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerInfo Clone() {
      return new PlayerInfo(this);
    }

    /// <summary>Field number for the "pid" field.</summary>
    public const int PidFieldNumber = 1;
    private string pid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pid {
      get { return pid_; }
      set {
        pid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "character" field.</summary>
    public const int CharacterFieldNumber = 2;
    private global::Google.Protobuf.Protocol.Character character_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.Character Character {
      get { return character_; }
      set {
        character_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Pid != other.Pid) return false;
      if (!object.Equals(Character, other.Character)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Pid.Length != 0) hash ^= Pid.GetHashCode();
      if (character_ != null) hash ^= Character.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Pid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Pid);
      }
      if (character_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Character);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Pid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pid);
      }
      if (character_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Character);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.Pid.Length != 0) {
        Pid = other.Pid;
      }
      if (other.character_ != null) {
        if (character_ == null) {
          Character = new global::Google.Protobuf.Protocol.Character();
        }
        Character.MergeFrom(other.Character);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Pid = input.ReadString();
            break;
          }
          case 18: {
            if (character_ == null) {
              Character = new global::Google.Protobuf.Protocol.Character();
            }
            input.ReadMessage(Character);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Character : pb::IMessage<Character> {
    private static readonly pb::MessageParser<Character> _parser = new pb::MessageParser<Character>(() => new Character());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Character> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Character() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Character(Character other) : this() {
      index_ = other.index_;
      fieldIndex_ = other.fieldIndex_;
      positionInfo_ = other.positionInfo_ != null ? other.positionInfo_.Clone() : null;
      name_ = other.name_;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Character Clone() {
      return new Character(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "fieldIndex" field.</summary>
    public const int FieldIndexFieldNumber = 2;
    private int fieldIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FieldIndex {
      get { return fieldIndex_; }
      set {
        fieldIndex_ = value;
      }
    }

    /// <summary>Field number for the "positionInfo" field.</summary>
    public const int PositionInfoFieldNumber = 3;
    private global::Google.Protobuf.Protocol.PositionInfo positionInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.PositionInfo PositionInfo {
      get { return positionInfo_; }
      set {
        positionInfo_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private global::Google.Protobuf.Protocol.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.Protocol.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Character);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Character other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (FieldIndex != other.FieldIndex) return false;
      if (!object.Equals(PositionInfo, other.PositionInfo)) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      if (FieldIndex != 0) hash ^= FieldIndex.GetHashCode();
      if (positionInfo_ != null) hash ^= PositionInfo.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (FieldIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FieldIndex);
      }
      if (positionInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PositionInfo);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (status_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (FieldIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FieldIndex);
      }
      if (positionInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PositionInfo);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Character other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.FieldIndex != 0) {
        FieldIndex = other.FieldIndex;
      }
      if (other.positionInfo_ != null) {
        if (positionInfo_ == null) {
          PositionInfo = new global::Google.Protobuf.Protocol.PositionInfo();
        }
        PositionInfo.MergeFrom(other.PositionInfo);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Google.Protobuf.Protocol.Status();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            FieldIndex = input.ReadInt32();
            break;
          }
          case 26: {
            if (positionInfo_ == null) {
              PositionInfo = new global::Google.Protobuf.Protocol.PositionInfo();
            }
            input.ReadMessage(PositionInfo);
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            if (status_ == null) {
              Status = new global::Google.Protobuf.Protocol.Status();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PositionInfo : pb::IMessage<PositionInfo> {
    private static readonly pb::MessageParser<PositionInfo> _parser = new pb::MessageParser<PositionInfo>(() => new PositionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PositionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionInfo(PositionInfo other) : this() {
      posX_ = other.posX_;
      posY_ = other.posY_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PositionInfo Clone() {
      return new PositionInfo(this);
    }

    /// <summary>Field number for the "posX" field.</summary>
    public const int PosXFieldNumber = 1;
    private float posX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosX {
      get { return posX_; }
      set {
        posX_ = value;
      }
    }

    /// <summary>Field number for the "posY" field.</summary>
    public const int PosYFieldNumber = 2;
    private float posY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PosY {
      get { return posY_; }
      set {
        posY_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PositionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PositionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosX, other.PosX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PosY, other.PosY)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PosX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosX);
      if (PosY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PosY);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PosX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(PosX);
      }
      if (PosY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(PosY);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PosX != 0F) {
        size += 1 + 4;
      }
      if (PosY != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PositionInfo other) {
      if (other == null) {
        return;
      }
      if (other.PosX != 0F) {
        PosX = other.PosX;
      }
      if (other.PosY != 0F) {
        PosY = other.PosY;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            PosX = input.ReadFloat();
            break;
          }
          case 21: {
            PosY = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Status : pb::IMessage<Status> {
    private static readonly pb::MessageParser<Status> _parser = new pb::MessageParser<Status>(() => new Status());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Status> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.Protocol.ProtocolReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Status() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Status(Status other) : this() {
      level_ = other.level_;
      exp_ = other.exp_;
      hp_ = other.hp_;
      mp_ = other.mp_;
      attack_ = other.attack_;
      defense_ = other.defense_;
      hit_ = other.hit_;
      avoid_ = other.avoid_;
      critical_ = other.critical_;
      attackSpeed_ = other.attackSpeed_;
      moveSpeed_ = other.moveSpeed_;
      spellSpeed_ = other.spellSpeed_;
      elemental_ = other.elemental_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Status Clone() {
      return new Status(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 1;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 2;
    private int exp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    /// <summary>Field number for the "hp" field.</summary>
    public const int HpFieldNumber = 3;
    private int hp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hp {
      get { return hp_; }
      set {
        hp_ = value;
      }
    }

    /// <summary>Field number for the "mp" field.</summary>
    public const int MpFieldNumber = 4;
    private int mp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Mp {
      get { return mp_; }
      set {
        mp_ = value;
      }
    }

    /// <summary>Field number for the "attack" field.</summary>
    public const int AttackFieldNumber = 5;
    private int attack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Attack {
      get { return attack_; }
      set {
        attack_ = value;
      }
    }

    /// <summary>Field number for the "defense" field.</summary>
    public const int DefenseFieldNumber = 6;
    private int defense_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Defense {
      get { return defense_; }
      set {
        defense_ = value;
      }
    }

    /// <summary>Field number for the "hit" field.</summary>
    public const int HitFieldNumber = 7;
    private int hit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Hit {
      get { return hit_; }
      set {
        hit_ = value;
      }
    }

    /// <summary>Field number for the "avoid" field.</summary>
    public const int AvoidFieldNumber = 8;
    private int avoid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Avoid {
      get { return avoid_; }
      set {
        avoid_ = value;
      }
    }

    /// <summary>Field number for the "critical" field.</summary>
    public const int CriticalFieldNumber = 9;
    private int critical_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Critical {
      get { return critical_; }
      set {
        critical_ = value;
      }
    }

    /// <summary>Field number for the "attackSpeed" field.</summary>
    public const int AttackSpeedFieldNumber = 10;
    private int attackSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttackSpeed {
      get { return attackSpeed_; }
      set {
        attackSpeed_ = value;
      }
    }

    /// <summary>Field number for the "moveSpeed" field.</summary>
    public const int MoveSpeedFieldNumber = 11;
    private int moveSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MoveSpeed {
      get { return moveSpeed_; }
      set {
        moveSpeed_ = value;
      }
    }

    /// <summary>Field number for the "spellSpeed" field.</summary>
    public const int SpellSpeedFieldNumber = 12;
    private int spellSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpellSpeed {
      get { return spellSpeed_; }
      set {
        spellSpeed_ = value;
      }
    }

    /// <summary>Field number for the "elemental" field.</summary>
    public const int ElementalFieldNumber = 13;
    private int elemental_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Elemental {
      get { return elemental_; }
      set {
        elemental_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Status);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Status other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      if (Exp != other.Exp) return false;
      if (Hp != other.Hp) return false;
      if (Mp != other.Mp) return false;
      if (Attack != other.Attack) return false;
      if (Defense != other.Defense) return false;
      if (Hit != other.Hit) return false;
      if (Avoid != other.Avoid) return false;
      if (Critical != other.Critical) return false;
      if (AttackSpeed != other.AttackSpeed) return false;
      if (MoveSpeed != other.MoveSpeed) return false;
      if (SpellSpeed != other.SpellSpeed) return false;
      if (Elemental != other.Elemental) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Level != 0) hash ^= Level.GetHashCode();
      if (Exp != 0) hash ^= Exp.GetHashCode();
      if (Hp != 0) hash ^= Hp.GetHashCode();
      if (Mp != 0) hash ^= Mp.GetHashCode();
      if (Attack != 0) hash ^= Attack.GetHashCode();
      if (Defense != 0) hash ^= Defense.GetHashCode();
      if (Hit != 0) hash ^= Hit.GetHashCode();
      if (Avoid != 0) hash ^= Avoid.GetHashCode();
      if (Critical != 0) hash ^= Critical.GetHashCode();
      if (AttackSpeed != 0) hash ^= AttackSpeed.GetHashCode();
      if (MoveSpeed != 0) hash ^= MoveSpeed.GetHashCode();
      if (SpellSpeed != 0) hash ^= SpellSpeed.GetHashCode();
      if (Elemental != 0) hash ^= Elemental.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Level != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Level);
      }
      if (Exp != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Exp);
      }
      if (Hp != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Hp);
      }
      if (Mp != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Mp);
      }
      if (Attack != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Attack);
      }
      if (Defense != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Defense);
      }
      if (Hit != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Hit);
      }
      if (Avoid != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Avoid);
      }
      if (Critical != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Critical);
      }
      if (AttackSpeed != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(AttackSpeed);
      }
      if (MoveSpeed != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MoveSpeed);
      }
      if (SpellSpeed != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(SpellSpeed);
      }
      if (Elemental != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Elemental);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (Exp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exp);
      }
      if (Hp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hp);
      }
      if (Mp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mp);
      }
      if (Attack != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Attack);
      }
      if (Defense != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Defense);
      }
      if (Hit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Hit);
      }
      if (Avoid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Avoid);
      }
      if (Critical != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Critical);
      }
      if (AttackSpeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackSpeed);
      }
      if (MoveSpeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MoveSpeed);
      }
      if (SpellSpeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpellSpeed);
      }
      if (Elemental != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Elemental);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Status other) {
      if (other == null) {
        return;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.Exp != 0) {
        Exp = other.Exp;
      }
      if (other.Hp != 0) {
        Hp = other.Hp;
      }
      if (other.Mp != 0) {
        Mp = other.Mp;
      }
      if (other.Attack != 0) {
        Attack = other.Attack;
      }
      if (other.Defense != 0) {
        Defense = other.Defense;
      }
      if (other.Hit != 0) {
        Hit = other.Hit;
      }
      if (other.Avoid != 0) {
        Avoid = other.Avoid;
      }
      if (other.Critical != 0) {
        Critical = other.Critical;
      }
      if (other.AttackSpeed != 0) {
        AttackSpeed = other.AttackSpeed;
      }
      if (other.MoveSpeed != 0) {
        MoveSpeed = other.MoveSpeed;
      }
      if (other.SpellSpeed != 0) {
        SpellSpeed = other.SpellSpeed;
      }
      if (other.Elemental != 0) {
        Elemental = other.Elemental;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Level = input.ReadInt32();
            break;
          }
          case 16: {
            Exp = input.ReadInt32();
            break;
          }
          case 24: {
            Hp = input.ReadInt32();
            break;
          }
          case 32: {
            Mp = input.ReadInt32();
            break;
          }
          case 40: {
            Attack = input.ReadInt32();
            break;
          }
          case 48: {
            Defense = input.ReadInt32();
            break;
          }
          case 56: {
            Hit = input.ReadInt32();
            break;
          }
          case 64: {
            Avoid = input.ReadInt32();
            break;
          }
          case 72: {
            Critical = input.ReadInt32();
            break;
          }
          case 80: {
            AttackSpeed = input.ReadInt32();
            break;
          }
          case 88: {
            MoveSpeed = input.ReadInt32();
            break;
          }
          case 96: {
            SpellSpeed = input.ReadInt32();
            break;
          }
          case 104: {
            Elemental = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
